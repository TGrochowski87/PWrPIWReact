{"version":3,"sources":["components/TagDropdown.js","components/NewEntry.js","components/Record.js","components/RecordList.js","components/SearchSpace.js","App.js","reportWebVitals.js","index.js"],"names":["TagDropdown","usedTags","addTag","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","CustomMenu","style","className","labeledBy","useState","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","target","Button","variant","Children","toArray","filter","child","props","toLowerCase","includes","Dropdown","Toggle","as","id","Menu","map","tag","Item","uuidv4","NewEntry","addRecord","titleInput","setTitleInput","nameInput","setNameInput","descriptionInput","setDescriptionInput","tags","setTags","setUsedTags","submitHandler","event","toAdd","element","push","title","name","description","alert","Form","onSubmit","Group","Label","Control","type","maxLength","rows","Badge","pill","length","Record","data","icon","faUserGraduate","faEnvelope","RecordList","recordList","tagSearchInput","titleSearchInput","setShownAmount","filteredList","setFilteredList","useEffect","record","SearchSpace","setTagSearchInput","setTitleSearchInput","shownAmount","Row","controlId","column","sm","Col","App","setRecordList","recordData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69e09af0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FormControl, Dropdown, Button } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TagDropdown = ({ usedTags, addTag }) => {\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n      const [value, setValue] = useState(\"\");\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Pick from list or add new\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              addTag(value);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter((child) =>\r\n              child.props.children.toLowerCase().includes(value)\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n        Add tags\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {usedTags.map((tag) => (\r\n          <Dropdown.Item\r\n            key={uuidv4()}\r\n            onClick={() => {\r\n              addTag(tag);\r\n            }}\r\n          >\r\n            {tag}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default TagDropdown;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Badge } from \"react-bootstrap\";\r\nimport TagDropdown from \"./TagDropdown\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NewEntry = ({ addRecord }) => {\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [usedTags, setUsedTags] = useState([\"react\", \"c++\", \"c#\"]);\r\n\r\n  const clearInputs = () => {\r\n    setTitleInput(\"\");\r\n    setNameInput(\"\");\r\n    setDescriptionInput(\"\");\r\n    setTags([]);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (titleInput === \"\" || nameInput === \"\" || descriptionInput === \"\") {\r\n      alert(\"Please fill the entire form before posting!\");\r\n      return;\r\n    }\r\n\r\n    const toAdd = [];\r\n\r\n    for (let element of tags) {\r\n      if (!usedTags.includes(element)) {\r\n        toAdd.push(element);\r\n      }\r\n    }\r\n    setUsedTags([...toAdd, ...usedTags]);\r\n\r\n    let recordData = {\r\n      title: titleInput,\r\n      name: nameInput,\r\n      description: descriptionInput,\r\n      tags: tags,\r\n    };\r\n\r\n    addRecord(recordData);\r\n    clearInputs();\r\n  };\r\n\r\n  const addTag = (value) => {\r\n    if (tags.length === 6) {\r\n      alert(\"Max amount reached!\");\r\n      return;\r\n    }\r\n\r\n    if (value !== null && value !== \"\") {\r\n      if (tags.includes(value)) {\r\n        alert(\"Tag already added!\");\r\n        return;\r\n      }\r\n\r\n      setTags([value, ...tags]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-entry\">\r\n      <Form\r\n        onSubmit={(event) => {\r\n          submitHandler(event);\r\n        }}\r\n      >\r\n        <Form.Group>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            maxLength=\"30\"\r\n            value={titleInput}\r\n            onChange={(event) => {\r\n              setTitleInput(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Full name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Full name\"\r\n            maxLength=\"30\"\r\n            value={nameInput}\r\n            onChange={(event) => {\r\n              setNameInput(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={6}\r\n            maxLength=\"300\"\r\n            value={descriptionInput}\r\n            onChange={(event) => {\r\n              setDescriptionInput(event.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Tags<p>Max. 6</p>\r\n          </Form.Label>\r\n          <div className=\"tag-space\">\r\n            {tags.map((tag) => (\r\n              <Badge pill key={uuidv4()} variant=\"primary\">\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </div>\r\n        </Form.Group>\r\n\r\n        <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n        <br />\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewEntry;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserGraduate, faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Record = ({ data }) => {\r\n  return (\r\n    <div className=\"record\">\r\n      <div className=\"icon-back\">\r\n        <FontAwesomeIcon icon={faUserGraduate} className=\"icon\" />\r\n      </div>\r\n      <div className=\"record-data\">\r\n        <h3>{`${data.title} - ${data.name}`}</h3>\r\n        <p>{data.description}</p>\r\n        <h6>{data.tags.map((tag) => `#${tag} `)}</h6>\r\n      </div>\r\n      <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Record from \"./Record\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst RecordList = ({\r\n  recordList,\r\n  tagSearchInput,\r\n  titleSearchInput,\r\n  setShownAmount,\r\n}) => {\r\n  const [filteredList, setFilteredList] = useState([...recordList]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(\r\n      recordList.filter((record) => {\r\n        if (titleSearchInput === \"\" && tagSearchInput === \"\") {\r\n          return record;\r\n        }\r\n\r\n        if (\r\n          titleSearchInput !== \"\" &&\r\n          record.title.toLowerCase().includes(titleSearchInput.toLowerCase())\r\n        ) {\r\n          return record;\r\n        }\r\n\r\n        if (tagSearchInput !== \"\") {\r\n          for (const tag of record.tags) {\r\n            if (tag.includes(tagSearchInput)) {\r\n              return record;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }, [tagSearchInput, titleSearchInput, recordList]);\r\n\r\n  useEffect(() => {\r\n    setShownAmount(filteredList.length);\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <div className=\"record-list\">\r\n      {filteredList.map((record) => (\r\n        <Record key={uuidv4()} data={record} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordList;\r\n","import React from \"react\";\r\nimport { Form, Button, Badge, Row, Col } from \"react-bootstrap\";\r\n\r\nconst SearchSpace = ({\r\n  tagSearchInput,\r\n  setTagSearchInput,\r\n  titleSearchInput,\r\n  setTitleSearchInput,\r\n  shownAmount,\r\n}) => {\r\n  return (\r\n    <div className=\"search-space\">\r\n      <div className=\"input-space\">\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            <Form.Label column sm=\"4\">\r\n              Search by tags:\r\n            </Form.Label>\r\n            <Col sm=\"7\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={tagSearchInput}\r\n                onChange={(event) => {\r\n                  setTitleSearchInput(\"\");\r\n                  setTagSearchInput(event.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            <Form.Label column sm=\"4\">\r\n              Search by title:\r\n            </Form.Label>\r\n            <Col sm=\"7\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={titleSearchInput}\r\n                onChange={(event) => {\r\n                  setTagSearchInput(\"\");\r\n                  setTitleSearchInput(event.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <Button variant=\"secondary\">\r\n        Found <Badge variant=\"light\">{shownAmount}</Badge>\r\n        <span className=\"sr-only\">unread messages</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSpace;\r\n","import { useState } from \"react\";\r\nimport NewEntry from \"./components/NewEntry\";\r\nimport RecordList from \"./components/RecordList\";\r\nimport SearchSpace from \"./components/SearchSpace\";\r\nimport \"./styles/App.scss\";\r\n\r\nfunction App() {\r\n  const [recordList, setRecordList] = useState([\r\n    {\r\n      title: \"SO2\",\r\n      name: \"Tomasz\",\r\n      description:\r\n        \"Please someone help me with SO, I have no idea what im doing...\",\r\n      tags: [\"help\", \"SO\"],\r\n    },\r\n    {\r\n      title: \"VHDL\",\r\n      name: \"Mark Dark\",\r\n      description: \"I'm looking for someone to make VHDL project with\",\r\n      tags: [\"vhdl\", \"digital\", \"circuits\"],\r\n    },\r\n    {\r\n      title: \"PIW\",\r\n      name: \"Tomasz\",\r\n      description: \"How you all guys doin'?\",\r\n      tags: [\"react\", \"sampletag\", \"hello\"],\r\n    },\r\n  ]);\r\n\r\n  const [tagSearchInput, setTagSearchInput] = useState(\"\");\r\n  const [titleSearchInput, setTitleSearchInput] = useState(\"\");\r\n  const [shownAmount, setShownAmount] = useState(0);\r\n\r\n  const addRecord = (recordData) => {\r\n    setRecordList([recordData, ...recordList]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchSpace\r\n        tagSearchInput={tagSearchInput}\r\n        setTagSearchInput={setTagSearchInput}\r\n        titleSearchInput={titleSearchInput}\r\n        setTitleSearchInput={setTitleSearchInput}\r\n        shownAmount={shownAmount}\r\n      />\r\n      <NewEntry addRecord={addRecord} />\r\n      <RecordList\r\n        recordList={recordList}\r\n        tagSearchInput={tagSearchInput}\r\n        titleSearchInput={titleSearchInput}\r\n        setShownAmount={setShownAmount}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}